Take picture of all logins
Top right of image go to the gear (where you login as a different user)>system settings> software and updates> check all boxes & then set it to "Daily,download automatically, imediatly"
ctrl + alt T = terminal
"sudo apt-get update"
"sudo apt-get upgrade"
"sudo gedit /etc/group" lets you see all users and admins
"sudo gedit /etc/passwd" lists users and passwords **If they dont belong just (#) them out*
Open web browser to check if web server is running. Go to browser and type "localhost" 
to check the webserver dir use "cd /var/www" then "ls". *If theres anything shady check it out with "nano" and the file dirand use rm to remove it*
To run the last command you ran do "sudo !!"
"sudo apt-get purge apache2" uninstall apache 
"sudo apt-get purge vsftpd" uninstall ftp
"sudo apt-get purge mysql-server-5.6" uninstall mysql web server
"sudo apt-get install nmap"
To see services running on the system do "nmap localhost"
$
Secure SSH
"sudo gedit /etc/ssh/sshd_config"
PermitRootLogin no
$
Pass policies
"sudo gedit /etc/login.defs"
PassMaxDays 30
PassMinDays 3
PassWarnAge 7 
$
Disable Guest account 
"cd /usr/share/lightdm/lightdm.conf.d/"
Then "sudo gedit 50-unbuntu.conf"
After that in the file that pops up add the line "allow-guest=false"
Then add "greeter-show-manual-login=true" *makes it so you have to type in the users whole login not just password
Then do "sudo service lightdm restart
$ 
Disable unauthorized services and get backdoors
"cd /etc/sudoers.d/" "ls" and check for anything shady should only be a readme
"sudo visudo" check to make sure authorized groups are allowed, or leave it as default
Then "sudo crontab" this checks anything that can be run at like startup, delete anything thats malicious or comment it out (#)
Backdoor checking
"cd /bin/"
"ls"
If there was any malicious files in "crontab" do "./(file directory)" then it should run  if its executable
then do "sudo rm (file or file dir)" then delete it
Then do "sudo apt-get purge netcat-openbsd"
Then do "sudo apt-get purge netcat-traditional"
Then do "sudo apt-get purge netcat [Tab]" to see if theres any other versions that need to be uninstalled
$
Packages to remove
Basic Kali Linux tools you should know
"sudo apt-get purge john" john = johntheripper
$
Remove user completely
go to home dir with the file manager
$
searh dpkgs
"dpkg -i chrome.deb"
installs packages for chrome or stuff like that
$
set passwords
"sudo passwd (username) [enter]
If theres a live hacker do "sudo apt-get install slay"
Then do "slay (hackers name)"
$
Shadow folder- where all password hashes are stored
"cd /etc/"
"sudo chmod 777 shadow"
"sudo gedit shadow"
Then when done in here do "sudo gedit chmod 640 shadow" to change permissions back
$
Dns settings
to check them do "cd /etc/"
"sudo gedit resolv.conf"
change name server to "127.0.0.1" *local dns* or "8.8.8.8" *googles dns*
$ 
host settings
"cd /etc/"
"sudo gedit hosts"
Check dns IPs to make sure they dont lead to random other websites that are shady
$
More crontabs
"cd /etc/"
"sudo su"*gain root privelages*
"cd /var/spool/cron/crontabs/
check their crontabs if multiple users have it
"gedit root" *gedit etc account*
same as before if theres any file paths that dont belong comment it out
$
Disable the Super User or "su"
"cd /etc/pam.d/"
"ls"
"sudo nano su"
look for line that contains 'SU_WHEEL_ONLY'
then the line underneath should be "#auth	required	pan_wheel.so"
un comment that line to disable su, su is disabled unless your in the "Wheel" group
an alternative is do "sudo gedit /etc/login.defs" then uncomment "SU_WHEEL_ONLY"
$
Check wheel group
"sudo gedit /etc/group"
sometimes it isnt there but if it is only users in that line can use "su" so anyone that isnt supposed to be there, remove them
$
Check more startups 
"cd /etc/"
"sudo gedit rc.local"
This should have text that claims it does nothing which is good but then if theres anything else delete that text not the whole file
$
Same as before but for init
"cd /etc/"
"cd init.d/"
"ls"
$
if needed take off samba
"sudo apt-get purge samba"
$
check every log made by users
"cd /var/log/"
"ls"
shows little things but the one below shows specifics
"sudo gedit auth.log"
$
check listenning ports
"netstat -tulpn"
or "lsof -i -n -P
or "ss -l" 
To kill process do "kill (process ID)
$
Lock command history file
"sudo chmod 640 .bash_history"
$
get a list of running processes
"sudo service --status-all > services.txt
then do 
"sudo gedit services.txt"
to see the list, check all running services if theres a service that shoulnt be running close it.
$
Firewall 
"ufw enable" starts it
Say theres a hacker on you and you needto close a port, do "ufw deny (port number)"
$
Tools 
"sudo apt-get install rkhunter"
"no configuration"
to start it do "rkhunter"
Next tool
"sudo apt-get install sysv-rc-conf"
to start "sysv-rc-conf"
if it says something about permissions just do "sudo !!"
This shows more hidden startup programs 
next tool
"chage"
this shows more password options

To show all accounts with no password
sudo awk -F: '($2 == "") {print}' /etc/shadow
To show all open and listening ports
'sudo lsof -i -P -n | grep LISTEN'
$
remove or add user
sudo userdel -r (name)
sudo useradd (name)
$
Get synaptic, show all packages installed
sudo apt-get install synaptic
synaptic
check for things like postgresql and remove it
$
sudo chmod 600 shadow
to make permissions only for root to access the password file
$
sudo apt-get install gufw 
depending on the situation make the setting like office or personal
then make incoming allow all
then outgoing allow all
then if theres a backdoor installed delete it and block the port its listening on
$
sudo apt-get purge postgresql 
stops the metasploit framework
$
locate password.txt
locates any files that are from like brute forcing, no user should have one 
$
go to firefox then the settings icon in the right hand corner
then go to "privacy and security" 
make it the most secure you think you can 
$
sudo apt-get autoremove
this command gets rid of all like extensions of a package, netcat-openbsd, etc
$
sudo apt-get purge telnet[tab]
make sure telnet is removed
$
Remove all these games: espdiff gnome-mines   sol      wesnoth-1.10         wesnoth-1.10-nolog     
wesnoth-nolog gnome-mahjongg  gnome-sudoku  wesnoth  wesnoth-1.10_editor  wesnoth-1.10-smallgui
$ 
sudo passwd --lock root
to lock the root acount
$
Using the gui disable autologin on the account your logged into
$
sudo apt-get install clamav
then do "clamscan" to scan for viruses
$
sudo sysctl -w net.ipv6.conf.all.disable_ipv6=1
sudo sysctl -w net.ipv6.conf.default.disable_ipv6=1
sudo sysctl -w net.ipv6.conf.lo.disable_ipv6=1
Just use those commands one by one to disable ipv6
no need to edit anything just one by one paste them in terminal
then do "ip a" and make sure no instance of ipv6 shows up
$
Apache serv Security now

1.Install and configure Firewall – ufw
2.Secure shared memory – fstab
3.SSH – Key based login, disable root login and change port
4.Apache SSL – Disable SSL v3 support
5.Protect su by limiting access only to admin group
6.Harden network with sysctl settings
7.Disable Open DNS Recursion and Remove Version Info – Bind9 DNS
8.Prevent IP Spoofing
9.Harden PHP for security
10.Restrict Apache Information Leakage
11.Install and configure Apache application firewall – ModSecurity
12.Protect from DDOS (Denial of Service) attacks with ModEvasive
13.Scan logs and ban suspicious hosts – DenyHosts and Fail2Ban
14.Intrusion Detection – PSAD
15.Check for RootKits – RKHunter and CHKRootKit
16.Scan open Ports – Nmap
17.Analyse system LOG files – LogWatch
18.Apparmor – Application Armor
19.Audit your system security – Tiger and Tripwire
$
Secure shared memory
sudo nano /etc/fstab
Add the following line and save. You will need to reboot for this setting to take effect :
Note : This only is works in Ubuntu 12.10 or later – For earlier Ubuntu versions replace /run/shm with /dev/shm 
Save and Reboot when done
$
More ssh 
The best way to secure SSH is to use public/private key based login. See SSH/OpenSSH/Keys
If you have to use password authentication, the easiest way to secure SSH is to disable root login and change the SSH port to something different than the standard port 22.
Before disabling the root login create a new SSH user and make sure the user belongs to the admin group (see step 4. below regarding the admin group).
if you change the SSH port keep the port number below 1024 as these are priviledged ports that can only be opened by root or processes running as root.
If you change the SSH port also open the new port you have chosen on the firewall and close port 22.

sudo nano /etc/ssh/sshd_config
Port (keep below 1024)
Protocol 2
PermitRootLogin no
DebianBanner no

sudo service ssh restart
$
Apache SSL hardening
The SSL v2/v3 protocol has been proven to be insecure.
We will disable Apache support for the protocol and force the use of the newer protocols.

sudo nano /etc/apache2/mods-available/ssl.conf

Change this line from :
SSLProtocol all -SSLv3
To the following and save:
SSLProtocol all -SSLv2 -SSLv3 
then restart that mf
sudo service apache2 restart
$
 Protect su by limiting access only to admin group
 To limit the use of su by admin users only we need to create an admin group, then add users and limit the use of su to the admin group.
Add a admin group to the system and add your own admin username to the group by replacing <YOUR ADMIN USERNAME> below with your admin username

sudo groupadd admin
sudo usermod -a -G admin
sudo dpkg-statoverride --update --add root admin 4750 /bin/su
$
Harden network with sysctl settings
The /etc/sysctl.conf file contain all the sysctl settings.
Prevent source routing of incoming packets and log malformed IP’s enter the following in a terminal window

sudo nano /etc/sysctl.conf

Edit the /etc/sysctl.conf file and un-comment or add the following lines :
# IP Spoofing protection
net.ipv4.conf.all.rp_filter = 1
net.ipv4.conf.default.rp_filter = 1

# Ignore ICMP broadcast requests
net.ipv4.icmp_echo_ignore_broadcasts = 1

# Disable source packet routing
net.ipv4.conf.all.accept_source_route = 0
net.ipv6.conf.all.accept_source_route = 0
net.ipv4.conf.default.accept_source_route = 0
net.ipv6.conf.default.accept_source_route = 0

# Ignore send redirects
net.ipv4.conf.all.send_redirects = 0
net.ipv4.conf.default.send_redirects = 0

# Block SYN attacks
net.ipv4.tcp_syncookies = 1
net.ipv4.tcp_max_syn_backlog = 2048
net.ipv4.tcp_synack_retries = 2
net.ipv4.tcp_syn_retries = 5

# Log Martians
net.ipv4.conf.all.log_martians = 1
net.ipv4.icmp_ignore_bogus_error_responses = 1

# Ignore ICMP redirects
net.ipv4.conf.all.accept_redirects = 0
net.ipv6.conf.all.accept_redirects = 0
net.ipv4.conf.default.accept_redirects = 0
net.ipv6.conf.default.accept_redirects = 0

# Ignore Directed pings
net.ipv4.icmp_echo_ignore_all = 1

To reload sysctl with the latest changes, enter:
sudo sysctl -p
$
Disable Open DNS Recursion and Remove Version Info

sudo nano /etc/bind/named.conf.options

Add the following to the Options section :
recursion no;
version "Not Disclosed";

Restart BIND DNS server. Open a Terminal and enter the following :
sudo service bind9 restart
$
Prevent IP Spoofing.

Open a Terminal and enter the following :
sudo nano /etc/host.conf

Add or edit the following lines :
order bind,hosts
nospoof on
$
PHP security 

Edit the php.ini file :
sudo nano /etc/php5/apache2/php.ini

Add or edit the following lines an save :
disable_functions = exec,system,shell_exec,passthru
register_globals = Off
expose_php = Off
display_errors = Off
track_errors = Off
html_errors = Off
magic_quotes_gpc = Off
mail.add_x_header = Off
session.name = NEWSESSID

Restart Apache server. Open a Terminal and enter the following :
sudo service apache2 restart

Restrict Apache Information Leakage.
Edit the Apache2 configuration security file :
sudo vi /etc/apache2/conf-available/security.conf

Add or edit the following lines and save :
ServerTokens Prod
ServerSignature Off
TraceEnable Off
Header unset ETag
Header always unset X-Powered-By
FileETag None

Restart Apache server. Open a Terminal and enter the following :
sudo service apache2 restart

$$$$$$$$$$$$$$$$$
DenyHosts is a python program that automatically blocks SSH attacks by adding entries to /etc/hosts.deny. DenyHosts will also inform Linux administrators about offending hosts, attacked users and suspicious logins.
Open a Terminal and enter the following :
sudo apt-get install denyhosts

After installation edit the configuration file /etc/denyhosts.conf  and change the email, and other settings as required.
To edit the admin email settings open a terminal window and enter:
sudo vi /etc/denyhosts.conf

Change the following values as required on your server :
ADMIN_EMAIL = root@localhost
SMTP_HOST = localhost
SMTP_PORT = 25
#SMTP_USERNAME=foo
#SMTP_PASSWORD=bar
SMTP_FROM = DenyHosts nobody@localhost
#SYSLOG_REPORT=YES
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

Fail2ban is more advanced than DenyHosts as it extends the log monitoring to other services including SSH, Apache, Courier, FTP, and more.
Fail2ban scans log files and bans IPs that show the malicious signs — too many password failures, seeking for exploits, etc.
Generally Fail2Ban then used to update firewall rules to reject the IP addresses for a specified amount of time, although any arbitrary other action could also be configured.
Out of the box Fail2Ban comes with filters for various services (apache, courier, ftp, ssh, etc).
Open a Terminal and enter the following :
sudo apt-get install fail2ban

After installation edit the configuration file /etc/fail2ban/jail.local  and create the filter rules as required.
To edit the settings open a terminal window and enter:
sudo vi /etc/fail2ban/jail.conf

Activate all the services you would like fail2ban to monitor by changing enabled = false to enabled = true
For example if you would like to enable the SSH monitoring and banning jail, find the line below and change enabled from false to true. Thats it.
[sshd]

enabled = true
port = ssh
filter = sshd
logpath = /var/log/auth.log
maxretry = 3

If you would like to receive emails from Fail2Ban if hosts are banned change the following line to your email address.
destemail = root@localhost

and change the following line from :
action = %(action_)s

to:
action = %(action_mwl)s

You can also create rule filters for the various services that you would like fail2ban to monitor that is not supplied by default.
sudo vi /etc/fail2ban/jail.local

Good instructions on how to configure fail2ban and create the various filters can be found on HowtoForge – click here for an example
When done with the configuration of Fail2Ban restart the service with :
sudo service fail2ban restart

You can also check the status with:
sudo fail2ban-client status

$$$$$$$$$$$$$$$$$$$$$$$$$$$


sudo apt-get install nmap

Scan your system for open ports with :
nmap -v -sT localhost

SYN scanning with the following :
sudo nmap -v -sS localhost
$
sudo apt-get install tiger tripwire

To setup Tripwire good installation guides can be found on Digital Ocean here and on Unixmen here
To run tiger enter :
sudo tiger

All Tiger output can be found in the /var/log/tiger
To view the tiger security reports, open a Terminal and enter the following :
sudo less /var/log/tiger/security.report.*
$
Read the readme

Note down which ports/users are allowed.

Do Forensics Questions

You may destroy the requisite information if you work on the checklist!

Secure root

set PermitRootLogin no in /etc/ssh/sshd_config

Secure Users

Disable the guest user.

Go to /etc/lightdm/lightdm.conf and add the line

allow-guest=false

Then restart your session with sudo restart lightdm. This will log you out, so make sure you are not executing anything important.

Open up /etc/passwd and check which users

Are uid 0
Can login
Are allowed in the readme
Delete unauthorized users:

sudo userdel -r $user

sudo groupdel $user

Check /etc/sudoers.d and make sure only members of group sudo can sudo.

Check /etc/group and remove non-admins from sudo and admin groups.

Check user directories.

cd /home
sudo ls -Ra *
Look in any directories which show up for media files/tools and/or "hacking tools."
Enforce Password Requirements.

Add or change password expiration requirements to /etc/login.defs.

PASS_MIN_DAYS 7
PASS_MAX_DAYS 90
PASS_WARN_AGE 14
Add a minimum password length, password history, and add complexity requirements.

Open /etc/pam.d/common-password with sudo.
Add minlen=8 to the end of the line that has pam_unix.so in it.
Add remember=5 to the end of the line that has pam_unix.so in it.
Locate the line that has pam.cracklib.so in it. If you cannot find that line, install cracklib with sudo apt-get install libpam-cracklib.
Add ucredit=-1 lcredit=-1 dcredit=-1 ocredit=- to the end of that line.
Implement an account lockout policy.

Open /etc/pam.d/common-auth.
Add deny=5 unlock_time=1800 to the end of the line with pam_tally2.so in it.
Change all passwords to satisfy these requirements.

chpasswd is very useful for this purpose.

Enable automatic updates

In the GUI set Update Manager->Settings->Updates->Check for updates:->Daily.

Secure ports

sudo ss -ln
If a port has 127.0.0.1:$port in its line, that means it's connected to loopback and isn't exposed. Otherwise, there should only be ports which are specified in the readme open (but there probably will be tons more).
For each open port which should be closed:
sudo lsof -i :$port
Copy the program which is listening on the port. whereis $program
Copy where the program is (if there is more than one location, just copy the first one). dpkg -S $location
This shows which package provides the file (If there is no package, that means you can probably delete it with rm $location; killall -9 $program). sudo apt-get purge $package
Check to make sure you aren't accidentally removing critical packages before hitting "y".
sudo ss -l to make sure the port actually closed.
Secure network

Enable the firewall

sudo ufw enable

Enable syn cookie protection

sysctl -n net.ipv4.tcp_syncookies

Disable IPv6 (Potentially harmful)

echo "net.ipv6.conf.all.disable_ipv6 = 1" | sudo tee -a /etc/sysctl.conf

Disable IP Forwarding

echo 0 | sudo tee /proc/sys/net/ipv4/ip_forward

Prevent IP Spoofing

echo "nospoof on" | sudo tee -a /etc/host.conf

Install Updates

Start this before half-way.

Do general updates.

sudo apt-get update.
sudo apt-get upgrade.
Update services specified in readme.

Google to find what the latest stable version is.
Google "ubuntu install service version".
Follow the instructions.
Ensure that you have points for upgrading the kernel, each service specified in the readme, and bash if it is vulnerable to shellshock.

Configure services

Check service configuration files for required services. Usually a wrong setting in a config file for sql, apache, etc. will be a point.

Ensure all services are legitimate.

service --status-all

Check the installed packages for "hacking tools," such as password crackers.

Run other (more comprehensive) checklists. This is checklist designed to get most of the common points, but it may not catch everything.

Tips
Netcat is installed by default in ubuntu. You will most likely not get points for removing this version.
Some services (such as ssh) may be required even if they are not mentioned in the readme. Others may be points even if they are explicitly mentioned in the readme
$
$
$

Change insecure root password

Removed program Crack

Removed program Hydra

Removed program John the Ripper

Removed program Nginx

Removed program telnetd

Removed program logkeys

SSH root login disabled

SSH don't permit empty password

Remove users

Check administrators

Add users

$ Turn on firewall
$ ufw enable or sudo apt-get install gufw

Ufw logging on high

$ Don't allow telnentd through firewall
$ port 23

Check for updates daily

Performed updates and restarted computer

Remove insecure sudoers.d configuration

Remove insecure README sudo configuration

Remove insecure sudoers configuration

Set correct password length and complexity

Set maximum password age

Set account lockout policy	

remove illegal bash shell

give users passwords

$ Removed guest account
$ "cd /usr/share/lightdm/lightdm.conf.d/"
$ Then "sudo gedit 50-unbuntu.conf"
$ After that in the file that pops up add the line "allow-guest=false"
$ Then add "greeter-show-manual-login=true" *makes it so you have to type in the users whole login not just password
$ Then do "sudo service lightdm restart

Remove Illegal Media File HailHydra

Turn on cookie protection

Removed hidden root users

Removed hidden root user 'Antivirus'

Disable root account    grep -ic -e "root:x:0:0:root:/root:/sbin/nologin" /etc/passwd

Secure cron             ls -la /etc/ | grep -ic -e "cron.allow" -e "at.allow

Disable control-alt-delete	
sudo nano /etc/init/control-alt-delete.conf
then find the line that says "exec shutdown -r now" or sum like that and comment it out
or try 
sudo systemctl mask ctrl-alt-del.target && systemctl daemon-reload

Remove hidden messages 

Remove hidden directories

Remove hidden password list     locate password(s).txt locate user(s).txt

Remove illegal lines preventing history from recording 

Remove insecure service rsh
do service --status-all
Remove Finn from sudo group 

Remove insecure login group    /etc/passwd

Remove all scheduled cron jobs  ls -la /var/spool/cron/crontabs

Remove Netcat Backdoor 'nc'

Remove Netcat

Remove cron script turning off ufw

Remove insecure scripts from init.d

Change insecure permissions for /etc/passwd     chmod 640 or 600

Change insecure permissions for /etc/group      chmod 640 or 600

Change insecure permissions for /etc/shadow

Samba secure encryption (if needed)
go into the samba config files and make it say this 
server signing = mandatory
    smb encrypt = mandatory

Remove prohibited game content aisleriot 

Change owner for /etc/passwd 

###
$ Check file system integrity 
 crontab -u root -l | grep aide
ensure a cron job in compliance is returned

 grep -r aide /etc/cron.* /etc/crontab
run the following command
 
run the command 
 crontab -u root -e
add the line into the crontab

0 5 * * * /usr/bin/aide --check

$
Disabling service to reduce the remote attack surface of the sys

grep -R "^chargen" /etc/inetd.*
check /etc/xinetd.conf and /etc/xinetd.d/* and verify all chargen services have
disable = yes set

Comment out or remove any lines starting with chargen from /etc/inetd.conf and
/etc/inetd.d/*.

Set disable = yes on all chargen services in /etc/xinetd.conf and /etc/xinetd.d/*.

$$$ discard is a network service that simply discards all data it receives. This service is
 intended for debugging and testing purposes. It is recommended that this service be
 disabled.
 Rationale:
 Disabling this service will reduce the remote attack surface of the system.
 Audit:
 Verify the discard service is not enabled. Run the following command and verify results
 are as indicated:
 grep -R "^discard" /etc/inetd.*
 No results should be returned
 check /etc/xinetd.conf and /etc/xinetd.d/* and verify all discard services
 have disable = yes set.
 Remediation:
 Comment out or remove any lines starting
 with discard from /etc/inetd.conf and /etc/inetd.d/*.
 Set disable = yes on all discard services in /etc/xinetd.conf and /etc/xinetd.d/*.

$$$ The Berkeley rsh-server (rsh, rlogin, rexec) package contains legacy services that
 exchange credentials in clear-text.
 Rationale:
 These legacy services contain numerous security exposures and have been replaced with
 the more secure SSH package.
 Audit:
 Verify the rsh services are not enabled. Run the following commands and verify results are
 as indicated:
 grep -R "^shell" /etc/inetd.*
 grep -R "^login" /etc/inetd.*
 grep -R "^exec" /etc/inetd.*
 No results should be returned
 check /etc/xinetd.conf and /etc/xinetd.d/* and verify all rsh, rlogin, and
 rexec services have disable = yes set.
 Remediation:
 Comment out or remove any lines starting with shell, login, or
 exec from /etc/inetd.conf and /etc/inetd.d/*.
 Set disable = yes on all rsh, rlogin,
 and rexec services in /etc/xinetd.conf and /etc/xinetd.d/*.  

$$$ The telnet-server package contains the telnet daemon, which accepts connections
 from users from other systems via the telnet protocol.
 Rationale:
 The telnet protocol is insecure and unencrypted. The use of an unencrypted transmission
 medium could allow a user with access to sniff network traffic the ability to steal
 credentials. The ssh package provides an encrypted session and stronger security.
 Audit:
 Verify the telnet service is not enabled. Run the following command and verify results are
 as indicated:
 grep -R "^telnet" /etc/inetd.*
 No results should be returned
 check /etc/xinetd.conf and /etc/xinetd.d/* and verify all telnet services
 have disable = yes set.
 Remediation:
 Comment out or remove any lines starting
 with telnet from /etc/inetd.conf and /etc/inetd.d/*.
 Set disable = yes on all telnet services in /etc/xinetd.conf and /etc/xinetd.d/*

$$$ Trivial File Transfer Protocol (TFTP) is a simple file transfer protocol, typically used to
 automatically transfer configuration or boot machines from a boot server. The packages
 tftp and atftp are both used to define and support a TFTP server.
 Rationale:
 TFTP does not support authentication nor does it ensure the confidentiality or integrity of
 data. It is recommended that TFTP be removed, unless there is a specific need for TFTP. In
 that case, extreme caution must be used when configuring the services.
 Audit:
 Verify the tftp service is not enabled. Run the following command and verify results are as
 indicated:
 grep -R "^tftp" /etc/inetd.*
 No results should be returned
 check /etc/xinetd.conf and /etc/xinetd.d/* and verify all tftp services have disable
 = yes set.
 Remediation:
 Comment out or remove any lines starting
 with tftp from /etc/inetd.conf and /etc/inetd.d/*.
 Set disable = yes on all tftp services in /etc/xinetd.conf and /etc/xinetd.d/*

$$$ The eXtended InterNET Daemon (xinetd) is an open source super daemon that replaced
 the original inetd daemon. The xinetd daemon listens for well known services and
 dispatches the appropriate daemon to properly respond to service requests.
 Rationale:
 If there are no xinetd services required, it is recommended that the daemon be disabled.
 Audit:
 Run the following command to verify xinetd is not enabled:
 # systemctl is-enabled xinetd
 disabled
 Verify result is not "enabled".
 Remediation:
 Run the following command to disable xinetd:
 # systemctl disable xinetd
 Notes:
 Additional methods of disabling a service exist. Consult your distribution documentation
 for appropriate methods.
 2.2 Special Purpose Services
 This section describes services that are installed on systems that specifically need to run
 these services. If any of these services are not required, it is recommended that they be
 disabled or deleted from the system to reduce the potential attack surface

$$$ ntp is a daemon which implements the Network Time Protocol (NTP). It is designed to
 synchronize system clocks across a variety of systems and use a source that is highly
 accurate. More information on NTP can be found at http://www.ntp.org. ntp can be
 configured to be a client and/or a server.
 This recommendation only applies if ntp is in use on the system.
 Rationale:
 If ntp is in use on the system proper configuration is vital to ensuring time synchronization
 is working properly.
 Audit:
 Run the following command and verify output matches:
 # grep "^restrict" /etc/ntp.conf
 restrict -4 default kod nomodify notrap nopeer noquery
 restrict -6 default kod nomodify notrap nopeer noquery
 The -4 in the first line is optional and options after default can appear in any
 order. Additional restriction lines may exist.
 Run the following command and verify remote server is configured properly:
 # grep "^server" /etc/ntp.conf
 server <remote-server>
 Multiple servers may be configured.
 Verify that ntp is configured to run as the ntp user by running the following command:
 # grep "RUNASUSER=ntp" /etc/init.d/ntp
 RUNASUSER=ntp
 Remediation:
 100 | P a g e
 Add or edit restrict lines in /etc/ntp.conf to match the following:
 restrict -4 default kod nomodify notrap nopeer noquery
 restrict -6 default kod nomodify notrap nopeer noquery
 Add or edit server lines to /etc/ntp.conf as appropriate:
 server <remote-server>
 Configure ntp to run as the ntp user by adding or editing the following file:
 /etc/init.d/ntp:
 RUNASUSER=ntp
$$$ 








